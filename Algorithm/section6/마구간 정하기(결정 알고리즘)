package algorithm;

import java.util.*;

public class Main {
    public int count(int[] arr, int dist) {
        int cnt = 1;
        int ep = arr[0]; // 제일 왼쪽 좌표에 1마리 배치
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] - ep >= dist) {
                cnt++;
                ep = arr[i];
            }
        }
        return cnt;
    }

    public int solution(int N, int C, int[] arr) {
        int answer = 0;
        Arrays.sort(arr); // 오름 차순 정렬
        int lt = 1;
        int rt = arr[N - 1];
        while(lt <= rt) {
            int mid = (lt + rt) / 2;
            if(count(arr, mid) >= C) { // C마리 이상 배치할 수 있다면
                answer = mid;
                lt = mid + 1; // mid보다 작은 값은 당연히 다 된다.
            } else rt = mid - 1; // 큰 값으로 했을 때 C마리를 넣을 수 없으면, 간격을 줄여야 한다. (유효하지 않은 경우)
        }

        return answer;
    }

    public static void main(String[] args) {
        Main T = new Main();
        Scanner scan = new Scanner(System.in);
        int N = scan.nextInt(); // DVD에 들어가는 곡의 수
        int C = scan.nextInt(); // DVD 목표 생성 갯수
        int[] arr = new int[N];
        for (int i = 0; i < N; i++) {
            arr[i] = scan.nextInt();
        }
        System.out.println(T.solution(N, C, arr));


    }
}
